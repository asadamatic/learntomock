// Mocks generated by Mockito 5.4.4 from annotations
// in learntomock/test/learntomock_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:learntomock/tv.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TVService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVService extends _i1.Mock implements _i2.TVService {
  MockTVService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double get volume => (super.noSuchMethod(
        Invocation.getter(#volume),
        returnValue: 0.0,
      ) as double);

  @override
  set volume(double? _volume) => super.noSuchMethod(
        Invocation.setter(
          #volume,
          _volume,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isOn => (super.noSuchMethod(
        Invocation.getter(#isOn),
        returnValue: false,
      ) as bool);

  @override
  void toggleOnOff() => super.noSuchMethod(
        Invocation.method(
          #toggleOnOff,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  double increaseVolume(double? newVolume) => (super.noSuchMethod(
        Invocation.method(
          #increaseVolume,
          [newVolume],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  double decreaseVolume(double? newVolume) => (super.noSuchMethod(
        Invocation.method(
          #decreaseVolume,
          [newVolume],
        ),
        returnValue: 0.0,
      ) as double);
}
